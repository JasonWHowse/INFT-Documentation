Mint NFT
    D3.0.0 The User shall be able to mint a file.
    D3.1.0 The User shall be able to select a file.
        D3.1.1 The User shall be able to write a file name into the text box.
        D3.1.2 The User shall be able to pick a file from the file picker.
        D3.1.2 The System shall remove the image or text displayed when the text box is updated.
    D3.2.0 The System shall display image files.
        D3.2.1 If the file bytecode type is "webp", "jpeg", "png", "gif", or "jpg", then the System shall display the image.
    D3.3.0 The System shall display plain text files.
        D3.3.1 If the file bytecode type is "txt", "html", "xml", "css", "js", "htm", or "json", then the System shall display the text.
    D3.4.0 If there is any text in the file text box, then the System shall make the mint button available.
        D3.4.1 If the file does not exists then, then the System shall pop a toast message error stating no such file exists.
        D3.4.2 If the file does exists, the System shall attempt to pin the file to the IPFS network.
        D3.4.3 If the file does not successfully pin to the IPFS network, the System shall pop a toast message error stating the file did not post to IPFS and post the error to the log file.
        D3.4.4 If the files successfully pins to the IPFS network, the System shall take the hash code generated and attempt to mint a token to the Ethereum network.
        D3.4.5 If the system successfully mints the token, the System shall pop a toast message primary stating Success!
        D3.4.6 If the system fails to mint the token, the System shall pop a toast message error stating the item failed to mint and point error logs to the log file.
        D3.4.7 The System shall populate a combo box will all NFTs associated with the users address.

Get NFT
    D4.0.0 The User shall be able to select any NFT from the combo box.
    D4.1.0 If the user selects an NFT, the System shall download the NFT to the local system.
        D4.1.1 The System shall assign a generic name to the file.
        D4.1.2 The System shall use miming to determine the file type is and assign the proper extension to the file.
    D4.2.0 The System shall display image files.
        D4.2.1 If the file bytecode type is "webp", "jpeg", "png", "gif", or "jpg", then the System shall display the image.
    D4.3.0 The System shall display plain text files.
        D4.3.1 If the file bytecode type is "txt", "html", "xml", "css", "js", "htm", or "json", then the System shall display the text in a text block.
    D4.4.0 The System shall post the file name to a text box.
    D4.5.0 The User shall be able to copy the file path to the clip board.

Transfer NFT (Not Implemented)
    D5.0.0 Not Implemented.

Logout
    D6.0.0 The user shall be able to logout.
    D6.1.0 The system shall set the account value to null.
    D6.2.0 The system shall set user environment to null.
    D6.3.0 The system shall set to the generic environment settings.
    D6.4.0 The system shall display the Login screen.

Logging
    D7.0.0 The System shall maintain a log of important events.
    D7.1.0 The System shall record important events as info events.
        D7.1.1 The System shall log a record that will display the url to the item posted to IPFS.
        D7.1.2 The System shall log a record the transaction hash.
    D7.2.0 The System shall record system errors from the MainWindow.xaml class as error events.
        D7.2.1 The System shall log a record when the environment fails to connect.
        D7.2.2 The System shall log a record when an error occurs during login.
        D7.2.3 The System shall log a record when the System fails to display an image.
        D7.2.4 The System shall log a record when the System fails to display a plain text file
        D7.2.5 The System shall log a record when the System fails to get a file from the IPFS network.
        D7.2.6 The System shall log a record when the System fails to pin a file to IPFS.
        D7.2.7 The System shall log a record when the System fails to mint a token to the Ethereum network.
    D7.3.0 The System shall record system errors from the Etherium_Interact class as error events.
        D7.3.1 The System shall log a record when the System fails to create a local web3 object.
        D7.3.2 The System shall log a record when the System fails to create a test web3 object.
        D7.3.3 The System shall log a record when the System fails to create a production web3 object.
        D7.3.4 The System shall log a record when the System has an error when checking that a token is associated with a particular account.
        D7.3.5 The System shall log a record when the System has an error minting the token.
    D7.4.0 The System shall record system errors from the Helpers class as error events.
        D7.4.1 The System shall log a record when the System fails to deserialize the JSON object selected.
    D7.5.0 The System shall record system errors from the IPFS_Interact class as error event.
        D7.5.1 The System shall log a record when the System fails to write the IPFS file to local storage.
        D7.5.2 The System shall log a record when the system fails to convert a stream to byte array or the mime guesser throws an error.
        D7.5.3 The System shall log a record when the system fails to pin a file to IPFS.
        D7.5.4 The System shall log a record when the system fails trying to delete all stored files.
